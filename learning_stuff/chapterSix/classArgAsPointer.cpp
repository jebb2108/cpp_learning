#include <iostream>

// Описание класса:
class MyClass
{
public:
    // Символьное поле:
    char code;
    // Поле - указатель на объект:
    MyClass* next;
    // Деструктор:
    ~MyClass() 
    {
        std::cout<<"Объект с полем "<<code<<" удален\n";
    }
    // Метод для отображения значения символьного поля:
    void show()
    {
        // Отображение значения поля:
        std::cout<<code<<" ";
        // Вызов метода для следующего объекта:
        if (next) next->show();
    }
};

// Функция для удаления цепочки объектов:
void deleteAll(MyClass* q)
{
    if(q->next) deleteAll(q->next);
    delete q;
}
// Главная функция программы:
int main()
{
    // Целочисленная переменная:
    int n=10;
    // Динамическое создание объекта:
    MyClass* pnt=new MyClass;
    // Доступ к полю объекта через указатель на него:
    pnt->code='A';
    // Указатель на объект:
    MyClass *p;
    // Начальное значение указателя:
    p=pnt;
    // Создание цепочки объектов:
    for (int k=1;k<=n;++k)
    {
        // Создание очереднего объекта:
        p->next=new MyClass;
        // Значение поля code для нового объекта:
        p->next->code=p->code+1;
        // Новое значение указателя - адрес
        // вновь созданного объекта:
        p=p->next;
    }
    // Нулевая ссылка в поле next для последнего
    // объекта в цепочке:
    p->next=0;
    // Вызов метода для первого объекта в цепочке:
    pnt->show();
    std::cout<<"\n";
    // Удаление цепочки объектов:
    deleteAll(pnt);
    return 0;
}
